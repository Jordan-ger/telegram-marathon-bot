const { Telegraf } = require('telegraf');
const fs = require('fs');
require('dotenv').config();

import { Telegraf } from "telegraf";
import dotenv from "dotenv";

dotenv.config(); // –ø–æ–¥–∫–ª—é—á–∞–µ–º .env (–ª–æ–∫–∞–ª—å–Ω–æ)

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start((ctx) => ctx.reply("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ"));
bot.launch();

const BOT_TOKEN = process.env.BOT_TOKEN;

const DATA_FILE = 'logins.json';

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ª–æ–≥–∏–Ω—ã
let logins = {};
if (fs.existsSync(DATA_FILE)) {
  logins = JSON.parse(fs.readFileSync(DATA_FILE));
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏–Ω—ã –≤ —Ñ–∞–π–ª
function saveLogins() {
  fs.writeFileSync(DATA_FILE, JSON.stringify(logins, null, 2));
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  await ctx.reply(
    `–ü—Ä–∏–≤–µ—Ç! –ú—ã –Ω–∞ –ë–∞–ª–∏–∫ –≤ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–∞–∑–∏–∫ –∑–∞–∫–∏–¥—ã–≤–∞–µ–º. –î–µ–ø–æ–∑–∏—Ç –≤–Ω–æ—Å–∏—Ç—å –Ω–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–¥–Ω–∏–º–µ—à—å, —Å–º–æ–∂–µ—à—å –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—É!  

https://t.me/casinobetlink/10

–†–µ–≥–∞–µ—à—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ, —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º: UFO

–ò –∫–∞–∫ –∑–∞—Ä–µ–≥–∞–µ—à—å—Å—è, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –ª–æ–≥–∏–Ω —Å—é–¥–∞. 
–Ø –ø–µ—Ä–µ–≤–µ–¥—É –ø—Ä—è–º–æ –Ω–∞ –±–∞–ª–∞–Ω—Å!`
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–ª–æ–≥–∏–Ω—ã)
bot.on('text', async (ctx) => {
  const userId = String(ctx.from.id);
  const message = ctx.message.text.trim();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –ª–∏ —É–∂–µ –ª–æ–≥–∏–Ω
  if (logins[userId]) {
    return ctx.reply('‚ùå –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ª–æ–≥–∏–Ω. –í—Ç–æ—Ä–æ–π —Ä–∞–∑ –Ω–µ–ª—å–∑—è.');
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–≤—ã–π –ª–æ–≥–∏–Ω
  logins[userId] = {
    telegramName: `${ctx.from.first_name || ''} ${ctx.from.last_name || ''}`.trim(),
    telegramID: userId,
    username: ctx.from.username || '',
    login: message,
  };
  saveLogins();

  await ctx.reply(`‚úÖ –õ–æ–≥–∏–Ω "${message}" —Å–æ—Ö—Ä–∞–Ω—ë–Ω!`);
});



// –ó–∞–ø—É—Å–∫
bot.launch();
console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
