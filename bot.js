const { Telegraf } = require("telegraf");
const fs = require("fs");
require("dotenv").config(); // –ª–æ–∫–∞–ª—å–Ω–æ –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç .env, –Ω–∞ Railway –±—É–¥–µ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è

console.log("BOT_TOKEN:", process.env.BOT_TOKEN ? "‚úÖ –Ω–∞–π–¥–µ–Ω" : "‚ùå –Ω–µ—Ç");

const bot = new Telegraf(process.env.BOT_TOKEN);

// –§–∞–π–ª –¥–ª—è –ª–æ–≥–∏–Ω–æ–≤
const DATA_FILE = "logins.json";

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ª–æ–≥–∏–Ω—ã
let logins = {};
if (fs.existsSync(DATA_FILE)) {
  logins = JSON.parse(fs.readFileSync(DATA_FILE));
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏–Ω—ã –≤ —Ñ–∞–π–ª
function saveLogins() {
  fs.writeFileSync(DATA_FILE, JSON.stringify(logins, null, 2));
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start(async (ctx) => {
  await ctx.reply("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ");
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π (–ª–æ–≥–∏–Ω—ã)
bot.on("text", async (ctx) => {
  const userId = String(ctx.from.id);
  const message = ctx.message.text.trim();

  if (logins[userId]) {
    return ctx.reply("‚ùå –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ª–æ–≥–∏–Ω. –í—Ç–æ—Ä–æ–π —Ä–∞–∑ –Ω–µ–ª—å–∑—è.");
  }

  logins[userId] = {
    telegramName: `${ctx.from.first_name || ""} ${ctx.from.last_name || ""}`.trim(),
    telegramID: userId,
    username: ctx.from.username || "",
    login: message,
  };
  saveLogins();

  await ctx.reply(`‚úÖ –õ–æ–≥–∏–Ω "${message}" —Å–æ—Ö—Ä–∞–Ω—ë–Ω!`);
});

// –ó–∞–ø—É—Å–∫
bot.launch();
console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω");
